services:
  postgres:
    image: "postgres:alpine"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_DB=${PG_NAME}
      - POSTGRES_HOST=${PG_HOST}
      - POSTGRES_PORT=${PG_PORT}
    env_file:
      - ./.env
    networks:
      - home

  # postgres_test:
  #   image: "postgres:alpine"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  #   ports:
  #     - "5433:5433"
  #   environment:
  #     - POSTGRES_USER=user
  #     - POSTGRES_PASSWORD=filmdbpass
  #     - POSTGRES_DB=test_db
  #     - POSTGRES_HOST=postgres_test
  #     - POSTGRES_PORT=5433
  #   env_file:
  #     - ./.env.test
  #   networks:
  #     - home

  test:
    build: .
    command: pytest -v
    volumes:
      - .:/code
    depends_on:
      - fastapi
    networks:
      - home

  fastapi:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: ipython run.py
    depends_on:
      - postgres
      - redis
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_DB=${PG_NAME}
      - POSTGRES_HOST=${PG_HOST}
      - POSTGRES_PORT=${PG_PORT}
    env_file:
      - ./.env
    networks:
      - home

  alembic:
    build: .
    command: /bin/sh -c "cd web_app && alembic upgrade head"
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_DB=${PG_NAME}
      - POSTGRES_HOST=${PG_HOST}
      - POSTGRES_PORT=${PG_PORT}
    env_file:
      - ./.env
    networks:
      - home

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - home

volumes:
  postgres_data:
  test_postgres_data:

networks:
  home:
    driver: bridge
